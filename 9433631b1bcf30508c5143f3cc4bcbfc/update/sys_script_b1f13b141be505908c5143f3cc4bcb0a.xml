<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sc_req_item</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sc_req_item">cat_item.u_cdw_item!=true^cat_item.u_contains_approvals=true^EQ<item endquery="false" field="cat_item.u_cdw_item" goto="false" newquery="false" operator="!=" or="false" value="true"/>
            <item endquery="false" field="cat_item.u_contains_approvals" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Approval RITM Opened</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	try {
		var inputs = {};
		inputs['document_id'] = current.getUniqueValue(); // String 

		// Start Asynchronously: Uncomment to run in background. Code snippet will not have access to outputs.
		sn_fd.FlowAPI.getRunner().subflow('global.wait_for_record_approvers').inBackground().withInputs(inputs).run();

		// Get Outputs:
		// Note: outputs can only be retrieved when executing synchronously.
		var has_approvals = outputs['has_approvals']; // True/False
		var approver_user_query = outputs['approver_user_query']; // String

	} catch (ex) {
		var message = ex.getMessage();
		gs.error(message);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>Terry.Lillo</sys_created_by>
        <sys_created_on>2022-02-04 21:36:04</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b1f13b141be505908c5143f3cc4bcb0a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Approval RITM Opened</sys_name>
        <sys_overrides/>
        <sys_package display_value="Modular Notifications" source="9433631b1bcf30508c5143f3cc4bcbfc">9433631b1bcf30508c5143f3cc4bcbfc</sys_package>
        <sys_policy/>
        <sys_scope display_value="Modular Notifications">9433631b1bcf30508c5143f3cc4bcbfc</sys_scope>
        <sys_update_name>sys_script_b1f13b141be505908c5143f3cc4bcb0a</sys_update_name>
        <sys_updated_by>Terry.Lillo</sys_updated_by>
        <sys_updated_on>2022-09-29 18:04:58</sys_updated_on>
        <template/>
        <when>async_always</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=b1f13b141be505908c5143f3cc4bcb0a"/>
</record_update>
