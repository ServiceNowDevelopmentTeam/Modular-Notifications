<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>global.ModularNotificationsBuilder</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Use this to build out a standard Modular Notification, so all notifications match styling and wording.</description>
        <name>ModularNotificationsBuilder</name>
        <script><![CDATA[var ModularNotificationsBuilder = Class.create();
ModularNotificationsBuilder.prototype = {	
	/**SNDOC
	@name initialize
	@description Initialize blank variables

	@example
		this.subject = '';
		this.information = '';
		this.varList = [];
		this.moreInformation = '';
		this.name = '';
		this.requestorName = '';
		this.table = 'other';
		this.action = '';
		this.type = 'sp';
		this.sourceTable = '';
		this.adaptiveCard = '';//Adaptive card for outlook actionable messages
		this.survey = 'false';
		this.customVariablesOverride = 'false'; //Setting to true ignores variables normally set
		this.customVariables = [];//Variables to include if above is true, can be blank for none
		this.urls = [{label:'', url:''}]; //Custom URLs to display in the header
		this.hideUrls = false; //Hide URLs in the header
	@returns {void}
	*/
	initialize: function() {
		this.subject = '';
		this.information = '';
		this.varList = [];
		this.moreInformation = '';
		this.name = '';
		this.requestorName = '';
		this.table = 'other';
		this.action = '';
		this.type = 'sp';
		this.sourceTable = '';
		this.adaptiveCard = '';
		this.signature = '<div style=line-height:140%;text-align:left;word-wrap:break-word class=v-text-align><p style=font-size:14px;line-height:140%>Best Regards,<p style=font-size:14px;line-height:140%>Field Support<br>(651) 925-8511</div>';
		this.survey = 'false';
		this.customVariablesOverride = 'false'; //Setting to true ignores variables normally set
		this.customVariables = [];//Variables to include if above is true, can be blank for none
		this.urls = [];
		this.hideUrls = false;
		this.colors = {
			apiBlue : '#2A3E6D'
		};
		this.images = {
			apiLogo : 'images/APiLogo.png',
			footerImageLeft : 'images/SN_Building_Great_Leaders.png',
			footerImageRight : 'images/SN_APi_Connect_Logo.png'
		};
	},

	/**SNDOC
	@name getHTML
	@description Return the HTML for modular notifications

	@example
		var notification = new ModularNotificationsBuilder();

		notification.table = 'incident';
		notification.documentID = 'c7b4ecc61b97fc5062e50ed2cd4bcb73';
		notification.setGlobalUrl();
		notification.action = 'completed';
		notification.name = current.opened_by.first_name.toString();

		var html = notification.getHTML();

	@returns {string} HTML email body
	*/
	getHTML: function() {

		try{
			//Instantiate vars
			var name = this.name;
			var table = this.table;
			var documentID = this.documentID;
			var action = this.action;
			var subject = this.subject;
			var information = this.information;
			var varList = this.varList;
			var moreInformation = this.moreInformation;
			var variableInformation = '';

			if(!table.nil()){
				//If opened RITM, then add template info to it
				if (
					(table == 'sc_req_item' && action != 'custom' && action != 'approved' && action != 'rejected') || 
					(table == 'sc_request' && (
						action == 'completed' || 
						action == 'opened')
					) && 
					!documentID.nil()

				) {
					this.ritmVals(action);
				}		
				if(this.hideUrls === false){
					this.urls = this.urls || [
						{label:'Knowledge', url:'https://apigroup.service-now.com/sp?id=kb_view2'},
						{label:'My Tickets', url:'https://apigroup.service-now.com/sp?id=my_requests'},
						{label:'Portal', url:'https://apigroup.service-now.com/sp'}
					];
					if(table == 'sysapproval_approver' && action != 'approved' && action != 'rejected' && gs.nil(this.urls)){
						this.urls = [
							{label:'Knowledge', url:'https://apigroup.service-now.com/sp?id=kb_view2'},
							{label:'My Approvals', url:'https://apigroup.service-now.com/sp?id=approvals'},
							{label:'Portal', url:'https://apigroup.service-now.com/sp'}
						];
					}
				}
				if(action == 'approved' || action == 'rejected' || action == 'created' || action == 'reminder'){
					this.approvalVals(action);
				}
				//If incident, then add template info to it
				if (table == 'incident' && action != 'custom' && !documentID.nil()) {
					this.incidentVals(action);
				}
				//If assigned to me, then add template info to it
				if ((action == 'assignedtomygroup' || action == 'assignedtome') && !documentID.nil()) {
					this.assignedVals(action);
				}

				if (action == 'updated') {
					this.getComments(this.documentID, this.table, false);
				}
				if (action == 'assignedtomygroup' || action == 'assignedtome') {
					this.getComments(this.documentID, this.table, true);
				}
			}
			subject += this.subject || '';
			information += this.information || '';
			if (this.varList.length > 0) {
				varList.push(this.varList);
			}

			var adaptiveCard = this.adaptiveCard;
			//TODO - Add adaptive card later - Outlook actionable messages

			moreInformation += this.moreInformation || '';
			this.provideFeedback = '';
			var surveySysId = '';
			if (action == 'completed' || this.survey == 'true'){
				if(this.table == 'sc_req_item'){
					surveySysId = this.getSurveySysid('sc_request', reqGr.request.sys_id);
					if(surveySysId){
						this.provideFeedback = '<a href="/sp?id=take_survey&instance_id=' + surveySysId +'" target=_blank rel=noopener>Provide Feedback</a>';
					}
				}
				else{
					surveySysId = this.getSurveySysid(this.table, this.documentID);
					if(surveySysId){
						this.provideFeedback = '<a href="/sp?id=take_survey&instance_id=' + surveySysId +'" target=_blank rel=noopener>Provide Feedback</a>';
					}

				}
			}
			/*
			Building out the variables section, we'll loop through the varList variable to build it out
			*/
			if(this.customVariablesOverride == 'true'){
				varList = this.customVariables;
			}
			this.variableInformation = this.buildVariableInformation(varList);

			/*
			Building out the urls section, we'll loop through this.urls to build it out
			*/	
			this.urlHTML = '';
			this.buildUrlHtml();

			var html = this.buildHtml();
			return html;
		}
		catch(e){
			gs.error('Modular notification exception: ' + e);
			return '';
		}
	},
	//////////////////////////////////////////////////////////////////////////////////////
	//////Internal - Setting Email Template for Incidents/////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////
	incidentVals: function(action) {
		action = action == 'completed' ? 'resolved' : action;
		//Get ritm
		var gr = new GlideRecord(this.table);
		gr.get(this.documentID);

		//Get End Time
		var slaGr = new GlideRecord("task_sla");
		slaGr.addQuery("task", current.sys_id);
		slaGr.addEncodedQuery('sla=35420982d732220035ae23c7ce610393^ORsla=af420982d732220035ae23c7ce6103f3^ORsla=d1524982d732220035ae23c7ce61035d^ORsla=b12a37e0d7322200f2d224837e6103ea^ORsla=44005d3d1b88bc10e7004229bc4bcb02');
		slaGr.query();
		while (slaGr.next()) {
			//Get last SLA
		}
		if (gr.caller_id != gr.sys_created_by)
			this.varList.push({
				variableName: 'Submitted By',
				variableValue: gr.opened_by.getDisplayValue()
			});

		this.varList.push({
			variableName: 'Incident Description',
			variableValue: gr.short_description.getDisplayValue()
		});
		if(action != 'resolved'){
			this.varList.push({
				variableName: 'Estimated Delivery Date',
				variableValue: slaGr.planned_end_time.getDateValue()
			});
			this.varList.push({
				variableName: 'Status',
				variableValue: gr.state.getDisplayValue()
			});
		}

		this.subject = 'Incident ' + current.number + ' has been ' + action;
		this.information = 'Your incident has been ' + action + '.';
		this.moreInformation = '';
		switch (action) {
			case ('opened'):
				break;
			case ('updated'):
				this.subject = 'Incident ' + current.number + ' has new comments';
				break;
			case ('resolved'):
				var reopenSysID = '6c9635d61b5774108c5143f3cc4bcbda';
				var reopenINC = gr.sys_id;
				var reopenURL = '/sp?id=sc_cat_item&sys_id=' + 
					reopenSysID + 
					'&sysparm_variables=%7B%22related_inc%22:%22' + reopenINC +'%22%7D';
				this.moreInformation += 'If this issue still needs attention, <a href="' + reopenURL + '">click here</a> to reopen the incident.<br><br>This incident will automatically close after 3 business days. If you still need assistance after it closes, a new incident will be required.<br>';
				this.varList.push({
					variableName: 'Resolution Note',
					variableValue: gr.u_customer_notes.getDisplayValue()
				});
				break;
			case ('closed'):
				break;
			default:
				break;
		}
		if(action != 'resolved'){
			this.moreInformation += '<br><a href="' + this.globalURL + '">Click here</a> to add a comment or view all comment history for this incident.';
		}
	},
	//////////////////////////////////////////////////////////////////////////////////////
	//////Internal - Setting Email Template for ITIL Assigned to me emails////////////////
	//////////////////////////////////////////////////////////////////////////////////////
	assignedVals: function(action) {
		switch(action){
			case 'assignedtome':
				action = 'assigned to you';
				break;
			case 'assignedtomygroup':
				action = 'assigned to your group';
				break;
			default:
				break;
		}
		//Get record
		var gr = new GlideRecord(this.table);
		gr.get(this.documentID);

		this.varList.push({
			variableName: 'Description',
			variableValue: gr.short_description.getDisplayValue()
		});
		this.varList.push({
			variableName: 'Status',
			variableValue: gr.state.getDisplayValue()
		});

		this.subject = gr.getValue('number') + ' has been ' + action;
		this.information = gr.getValue('number') + ' has been ' + action + '.';
		this.moreInformation = '';
		switch (action) {
			case ('assigned to you'):
				this.subject = gr.getValue('number') + ' has been ' + action + '.';
				break;
			default:
				break;
		}
		if(action != 'resolved'){
			this.moreInformation += '<br><a href="' + this.globalURL + '">Click here</a> to add a comment or view all comment history for this record.';
		}
	},
	//////////////////////////////////////////////////////////////////////////////////////
	//////Internal - Setting Email Template for Approval emails///////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////
	approvalVals: function(action) {
		//Get record
		var gr = new GlideRecord(this.table);
		gr.get(this.documentID);

		//Get name of table the approval came from
		var docGr = new GlideRecord('sys_documentation');
		var encodedQuery = 'name=' + (this.sourceTable || this.table) + '^element=NULL';
		docGr.addEncodedQuery(encodedQuery);
		docGr.query();
		var tableName = (docGr.next() ? docGr.label.toString() : 'request');
		var ritmGr = new GlideRecord();

		//Get base table
		var tu = new TableUtils((this.sourceTable || this.table));
		var baseTable = tu.getAbsoluteBase();

		var sourceGr = gr;
		if(this.table=='sysapproval_approver'){
			sourceGr = new GlideRecord(gr.source_table);
			sourceGr.get(this.document_id.sys_id.toString());
		}
		//Set subject
		if(this.sourceTable == 'sc_req_item' || this.table == 'sc_req_item'){
			ritmGr = new GlideRecord('sc_req_item');
			ritmGr.get(gr.document_id.number.getValue() || gr.number.getValue());
			this.signature = this.getSignature(ritmGr);
		}

		//Set subject
		if(this.sourceTable == 'sc_req_item'){
			ritmGr = new GlideRecord(this.sourceTable);
			ritmGr.get(gr.document_id.number.getValue());
			this.subject = 'Request ' + ritmGr.request.number.toString() + ' has been ' + action;
			this.subject = action == 'created' || action == 'reminder' ? (action == 'reminder'? 'REMINDER' : 'ACTION REQUIRED') + ': APi Connect Approval Request From ' + this.requestorName : this.subject;
		}
		else{
			this.subject = action == 'created' || action == 'reminder' ? (action == 'reminder'? 'REMINDER' : 'ACTION REQUIRED') + ': APi Connect Approval Request From ' + this.requestorName : 'APi Connect ' + tableName + ' ' + action;
		}

		//Set information section
		var documentNumber = gr.document_id.request.number.getValue() || gr.document_id.number.getValue() || gr.number.getValue();
		this.information = action == 'created' ? '<br>' + (this.requestorName || 'An APi Connect user') + ' has submitted the following ' + (tableName == 'Requested Item' ? 'Request' : tableName).toLowerCase() + ' for your review. Your approval is required before this request can be processed.' : 'Approval ' + documentNumber + ' has been ' + (action == 'reminder'? 'created' : action) + '.';
		if(this.sourceTable == 'sc_req_item' && action != 'created' && action != 'reminder'){
			this.information = 'Your request has been ' + action + '. Please review details below for more information.';
		}

		//Set more information section
		this.moreInformation = '<br>Please click here to review the request: <a href="' + this.globalURL + '">Click here</a>';
		if (action == 'created' || action == 'reminder'){
			var generator = new global.CustomApprovalAdaptiveCardGenerator(gr, 'en');
			if(this.oamRefreshUrl){
				generator.oamRefreshUrl = this.oamRefreshUrl;
			}
			var content = generator.generate();
			this.adaptiveCard = '<script type="application/adaptivecard+json">' + content +'</script>';
		}

		//Set variables
		this.varList.push({
			variableName: 'Submitted By',
			variableValue: this.requestorName
		});
		
		var approv1 = gr.u_approval_is_for;
		if(approv1 != ''){
			this.varList.push({
				variableName: 'Approval is For',
				variableValue: approv1
			});
		}
		if(this.sourceTable && this.sourceTable == 'sc_req_item' && gr.document_id.number.getValue()){

			var estDeliveryDate = '';
			var startDate = new GlideDateTime();
			var cat_item = new GlideRecord('sc_cat_item');
			cat_item.get(ritmGr.cat_item);
			if(cat_item.getDisplayValue('delivery_time')) {
				//calculate the duration
				var dur = cat_item.delivery_time;
				var dur_in_ms = 60*60*12*1000*(dur.getByFormat('dd')-1);
				var dur_final = new GlideDuration(dur_in_ms);

				//schedule on 12 hour weekdays
				var schedRec = new GlideRecord('cmn_schedule');
				schedRec.get('name', '6-6 Weekdays');
				var schedule = new GlideSchedule(schedRec.sys_id);

				//calc final date
				var end = schedule.add(startDate, dur_final);

				// return the calculated value without hours
				estDeliveryDate =  end.getDate().getDisplayValue();
				// return the calculated value with hours
				//return end.getDisplayValue();
			}
			if(action != 'rejected'){
				this.varList.push({
					variableName: 'Estimated Delivery Date',
					variableValue: estDeliveryDate
				});
			}
		}


		//Get approved or rejected approvers and comments
		var approverEncodedQuery = 'stateINapproved,rejected';
		approverEncodedQuery += '^sysapproval=' + gr.document_id;
		var approverGr = new GlideRecord('sysapproval_approver');
		approverGr.addEncodedQuery(approverEncodedQuery);
		approverGr.query();

		var approverString = '';
		var approverComments = '';

		while (approverGr.next()){
			approverString += approverGr.getDisplayValue('approver') + ': ' + approverGr.getDisplayValue('state');
			approverString += approverGr.hasNext() ? '<br>' : '';
			var commentString = this.getCommentString(approverGr.getUniqueValue(), 'sysapproval_approver', 'false');
			approverComments += commentString ? commentString : ''; 
			approverComments += approverGr.hasNext() && commentString ? '<br>' : '';
		}

		if(baseTable == 'task'){
			var taskNumber = this.sourceTable == 'sc_req_item' ? 'Request: ' + ritmGr.request.number.getDisplayValue() + '<br>Request Item: ' + ritmGr.number.getDisplayValue() : gr.document_id.number.toString();
			var taskShortDescription = this.sourceTable == 'sc_req_item' ? ritmGr.request.short_description.getDisplayValue() : gr.document_id.short_description.toString();
			this.varList.push({
				variableName: 'Number',
				variableValue: taskNumber
			}, {
				variableName: 'Description',
				variableValue: taskShortDescription
			});
		}
		this.varList.push({
			variableName: 'Approval Replies',
			variableValue: approverString
		}, {
			variableName: 'Approval Comments',
			variableValue: approverComments
		});
	},
	////////////////////////////////////////////////////////////////////////////////////
	//////Internal - Setting Email Template for REQ/RITMs///////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////
	ritmVals: function(action) {

		//Get ritm
		var gr = new GlideRecord(this.table);
		gr.get(this.documentID);
		if (this.table == 'sc_request') {
			gr=new GlideRecord('sc_req_item');
			gr.addQuery('request', this.documentID);
			gr.query();
			gr.next();
		}
		this.signature = this.getSignature(gr);

		//Find out if it's an approval using the catalog item's Approval true/false field
		var isApproval = this.table == 'sc_request' ? (gr.request.u_cdw_order.toString() == 'true') : (gr.cat_item.u_contains_approvals.toString() == 'true');
		var isConditionalApproval = (gr.cat_item.u_conditional_approvals.toString() == 'true');
		var approvalCondition = gr.cat_item.u_approval_condition.toString();

		//Find out if it's a cascading approval using the catalog item's Cascading Approval true/false field
		var isCascadingApproval = gr.cat_item.u_is_multiple_approval;
		var isConditionalCascadingApproval = (gr.cat_item.u_is_not_multiple_approver_conditional.toString() == 'false');
		var cascadingApprovalCondition = gr.cat_item.u_multiple_approval_condition.toString();

		if(action == 'opened' && isApproval){
			if(isConditionalApproval && approvalCondition){
				//Re-query the same RITM to see if it matches the Approval Condition field's conditions
				var approvalGr = new GlideRecord('sc_req_item');
				approvalGr.addQuery('sys_id', gr.getUniqueValue());
				approvalGr.addEncodedQuery(approvalCondition);
				approvalGr.query();

				if(approvalGr.hasNext()){
					action = 'submitted for approval';
					if(isCascadingApproval && isConditionalCascadingApproval && cascadingApprovalCondition){
						//Re-query the same RITM to see if it matches the Cascading Approval Condition field's conditions
						approvalGr = new GlideRecord('sc_req_item');
						approvalGr.addQuery('sys_id', gr.getUniqueValue());
						approvalGr.addEncodedQuery(cascadingApprovalCondition);
						approvalGr.query();
						if(approvalGr.hasNext()){
							action = 'cascadingapproval';
						}
					}
					else if(isCascadingApproval && !isConditionalCascadingApproval){
						action = 'cascadingapproval';
					}
				}
			}
			else{
				action = 'submitted for approval';

			}
		}

		var grSysId = gr.getUniqueValue();
		var estDeliveryDate = '';
		var startDate = new GlideDateTime();
		var cat_item = new GlideRecord('sc_cat_item');
		cat_item.get(gr.cat_item);
		if(cat_item.getDisplayValue('delivery_time')) {
			//calculate the duration
			var dur = cat_item.delivery_time;
			var dur_in_ms = 60*60*12*1000*(dur.getByFormat('dd')-1);
			var dur_final = new GlideDuration(dur_in_ms);

			//schedule on 12 hour weekdays
			var schedRec = new GlideRecord('cmn_schedule');
			schedRec.get('name', '6-6 Weekdays');
			var schedule = new GlideSchedule(schedRec.sys_id);

			//calc final date
			var end = schedule.add(startDate, dur_final);

			// return the calculated value without hours
			estDeliveryDate =  end.getDate().getDisplayValue();
			// return the calculated value with hours
			//return end.getDisplayValue();
		}

		var approverStr='';

		this.varList.push({
			variableName: 'Submitted By',
			variableValue: gr.opened_by.getDisplayValue()
		}, {
			variableName: 'Number',
			variableValue: 'Request: ' + gr.request.number.getDisplayValue() + '<br>Request Item: ' + gr.number.getDisplayValue()
		}, {
			variableName: 'Description',
			variableValue: gr.request.short_description.getDisplayValue()
		});
		if (action == 'completed'){		
			//Do nothing
		} else if (action == 'submitted for approval' || action == 'cascadingapproval'){
			this.getRitmApprovers(grSysId);
			var approverGr = new GlideRecord('sysapproval_approver');
			approverGr.addQuery('document_id',grSysId);
			approverGr.query();

			while(approverGr.next()){
				approverStr += approverGr.approver.name;
				approverStr += approverGr.hasNext() ? '<br>' : '';
			}
			if(action == 'cascadingapproval'){
				this.varList.push({
					variableName: 'Approval Requested From',
					variableValue: 'Multiple Approvers'
				});
			}
			else{
				this.varList.push({
					variableName: 'Approval Requested From',
					variableValue: approverStr
				});
			}
		} else {
			this.varList.push({
				variableName: 'Estimated Delivery Date',
				variableValue: estDeliveryDate
			}, {
				variableName: 'Status',
				variableValue: gr.state.getDisplayValue()
			});
		}

		//Get catalog item variable values
		this.getCatItemVals(action);


		this.subject = this.customRitmSubject ? this.customRitmSubject : 'Request ' + gr.request.number + ' has been ' + action;
		this.subject = action != 'cascadingapproval' ? this.subject : 'Request ' + gr.request.number + ' has been submitted for approval';
		this.information = this.customRitmInfo ? this.customRitmInfo : 'Your request has been ' + action + '.';
		this.information += action == 'submitted for approval' ? ' Once approved, your request will be processed.' : '';
		this.information = action == 'cascadingapproval' ? 'This request requires multiple approvals. Once all approvals are completed, your request will be processed.' : this.information;

		this.moreInformation = this.moreInformation || '';
		this.moreInformation += action == 'updated' ? '<a href="' + this.globalURL + '">Click here</a> to add a comment or view all comment history for this request.<br>' : this.customRitmMoreInformation ? this.customRitmMoreInformation : '<a href="' + this.globalURL + '">Click here</a> to update or review the latest details of this request.';
	},
	/////////////////////////////////////////////////////////////////////////////////////
	///Internal - Get custom email sections for cat items, this applies to ritm and req//
	/////////////////////////////////////////////////////////////////////////////////////
	getCatItemVals: function(action) {
		//get ritm
		var gr = new GlideRecord(this.table);
		gr.get(this.documentID);
		if (this.table == 'sc_request' && gr.getRowCount() == 1) {
			gr = new GlideRecord('sc_req_item');
			gr.addQuery('request', this.documentID);
			gr.query();
			gr.next();
		}
		this.signature = this.getSignature(gr);
		switch (action) {
			case ('opened'):
				this.customRitmSubject = gr.cat_item.u_custom_subject ? gr.cat_item.u_subject : '';
				this.customRitmInfo = gr.cat_item.u_custom_info ? gr.cat_item.u_info : '';
				this.customRitmMoreInformation = gr.cat_item.u_custom_additional_info ? gr.cat_item.u_additional_info : '';
				break;
			case ('updated'):
				this.customRitmSubject = gr.cat_item.u_custom_subject_updated ? gr.cat_item.u_subject_updated : '';
				this.customRitmInfo = gr.cat_item.u_custom_info_updated ? gr.cat_item.u_info_updated : '';
				this.customRitmMoreInformation = gr.cat_item.u_custom_additional_info_updated ? gr.cat_item.u_additional_info_updated : '';
				break;
			case ('completed'):
				if (gr.getRowCount() == 1) {
					var reopenSysID = '6c9635d61b5774108c5143f3cc4bcbda';
					var reopenRITM = gr.sys_id;
					var reopenURL = '/sp?id=sc_cat_item&sys_id=' + 
						reopenSysID + 
						'&sysparm_variables=%7B%22related_ritm%22:%22' + reopenRITM +'%22%7D';
					this.customRitmSubject = gr.cat_item.u_custom_subject_completed ? gr.cat_item.u_subject_completed : '';
					this.customRitmInfo = gr.cat_item.u_custom_info_completed ? gr.cat_item.u_info_completed : '';
					this.customRitmMoreInformation = gr.cat_item.u_custom_additional_info_completed ? gr.cat_item.u_additional_info_completed : 'If this request still needs attention, please <a href="' + reopenURL + '">click here</a> to reopen.';
				}
				break;
			default:
				this.customRitmSubject = '';
				this.customRitmInfo = '';
				this.customRitmMoreInformation = '';
				break;
		}
	},
	///////////////////////////////////////////////////////////////////////////////////
	//Internal - Get comments to add to variables section, this applies to all tables//
	///////////////////////////////////////////////////////////////////////////////////
	getComments: function(documentID, table, isITIL) {
		var gr = new GlideRecord('sys_journal_field');
		gr.addQuery('element_id', documentID);
		if(isITIL){
			gr.addQuery('element', 'comments').addOrCondition('element','work_notes');
		}
		else{
			gr.addQuery('element', 'comments');
		}
		gr.addQuery('name', table);
		gr.orderByDesc('sys_created_on');
		gr.query();
		if(gr.hasNext()){
			if(isITIL){
				this.varList.push({
					variableName: "Comments and Work Notes",
					variableValue: "Includes up to 5 most recent comments and work notes below:"
				});
			}
			else{
				this.varList.push({
					variableName: "Comments",
					variableValue: "Includes up to 5 most recent comments below:"
				});
			}
		}
		var i = 0;
		while (gr.next() && i < 5) {
			var commenter = '';
			var commentedBy = gr.sys_created_by.toString();
			if (commentedBy){
				var userGr = new GlideRecord('sys_user');
				userGr.addQuery('user_name',commentedBy);
				userGr.addQuery('user_name','!=','');
				userGr.addActiveQuery();
				userGr.query();
				userGr.next();
				commenter = userGr.name.toString();
			}
			else{
				commenter = commentedBy;
			}
			commenter = commenter || 'System';
			var createdOn = new GlideDateTime(gr.sys_created_on);
			var schedTools = new ScheduleTools();
			createdOn = new GlideDateTime(schedTools.timeZoneDiff(createdOn,'-6'));

			var createdOnDate = createdOn.getDate();
			var createdOnTime = new GlideTime();
			createdOnTime.setValue(createdOn.getTime());

			//remove '[code]' and '[/code]' from gr

			var gr_val = gr.value.toString();
			var gr_final = gr_val;
			while(gr_final.includes('[code]')){
				var r = new SNC.Regex('/\\[\/?code\\]/');
				var gr_final = r.replaceAll(gr_val, '');
			}
			this.varList.push({
				variableName: createdOnDate + ' ' + createdOnTime.getByFormat('hh:mm a') + ' - ' + commenter,
				variableValue: gr_final
			});
			i++;
		}
	},


	/**SNDOC
	@name getCommentString
	@description Returns comments from the sys_journal_field table

	@param {string} [documentID] - sys_id of the record on the table
	@param {string} [table] - table the record exists on
	@param {bool} [isITIL] - If true, it returns work notes and comments

	@example
	//Get approved or rejected approvers and comments
	var approverEncodedQuery = 'stateINapproved';
	approverEncodedQuery += '^sysapproval=' + current.sys_id.toString();
	var approverGr = new GlideRecord('sysapproval_approver');
	approverGr.addEncodedQuery(approverEncodedQuery);
	approverGr.query();

	var approverString = '';
	var approverComments = '';

		while (approverGr.next()){
		var commentString = new global.ModularNotificationsBuilder().getCommentString(approverGr.getUniqueValue(), 'sysapproval_approver', 'false');
		approverString += approverGr.getDisplayValue('approver') + ': ' + approverGr.getDisplayValue('state');
		approverComments += commentString ? commentString : '';
	}
	gs.info(approverComments);

	@returns {string} HTML formatted text comments
	*/
	getCommentString: function(documentID, table, isITIL) {
		var variableString = '';
		var gr = new GlideRecord('sys_journal_field');
		gr.addQuery('element_id', documentID);
		gr.addQuery('element', 'comments');
		gr.addQuery('name', table);
		gr.orderByDesc('sys_created_on');
		gr.query();
		if(!gr.hasNext()){
			return '';
		}
		var i = 0;
		while (gr.next() && i < 5) {
			var commenter = '';
			var commentedBy = gr.sys_created_by.toString();
			if (commentedBy){
				var userGr = new GlideRecord('sys_user');
				userGr.addQuery('user_name',commentedBy);
				userGr.addQuery('user_name','!=','');
				userGr.addActiveQuery();
				userGr.query();
				userGr.next();
				commenter = userGr.name.toString();
			}
			else{
				commenter = commentedBy;
			}
			commenter = commenter || 'System';
			var createdOn = new GlideDateTime(gr.sys_created_on);
			var schedTools = new ScheduleTools();
			createdOn = new GlideDateTime(schedTools.timeZoneDiff(createdOn,'-6'));

			var createdOnDate = createdOn.getDate();
			var createdOnTime = new GlideTime();
			createdOnTime.setValue(createdOn.getTime());

			var variableName = createdOnDate + ' ' + createdOnTime.getByFormat('hh:mm a') + ' - ' + commenter;
			var variableValue = gr.value.toString();
			if (variableName && variableValue){
				variableString += variableName + '<br>' + variableValue + '<br>';
			}
			i++;
		}
		return variableString;
	},

	/**SNDOC
	@name getNoHTMLCommentString
	@description Returns comments from the sys_journal_field table

	@param {string} [documentID] - sys_id of the record on the table
	@param {string} [table] - table the record exists on
	@param {bool} [isITIL] - If true, it returns work notes and comments

	@example
	//Get approved or rejected approvers and comments
	var approverEncodedQuery = 'stateINapproved';
	approverEncodedQuery += '^sysapproval=' + current.sys_id.toString();
	var approverGr = new GlideRecord('sysapproval_approver');
	approverGr.addEncodedQuery(approverEncodedQuery);
	approverGr.query();

	var approverString = '';
	var approverComments = '';

		while (approverGr.next()){
		var commentString = new global.ModularNotificationsBuilder().getNoHTMLCommentString(approverGr.getUniqueValue(), 'sysapproval_approver', 'false');
		approverString += approverGr.getDisplayValue('approver') + ': ' + approverGr.getDisplayValue('state');
		approverComments += commentString ? commentString : '';
	}
	gs.info(approverComments);

	@returns {string} Plain text comments
	*/
	///////////////////////////////////////////////////////////////////////////////////
	//Internal - Get comments to add to variables section, this applies to all tables//
	///////////////////////////////////////////////////////////////////////////////////
	getNoHTMLCommentString: function(documentID, table, isITIL) {
		var variableString = '';
		var gr = new GlideRecord('sys_journal_field');
		gr.addQuery('element_id', documentID);
		gr.addQuery('element', 'comments');
		gr.addQuery('name', table);
		gr.orderByDesc('sys_created_on');
		gr.query();
		if(!gr.hasNext()){
			return '';
		}
		var i = 0;
		while (gr.next() && i < 5) {
			var commenter = '';
			var commentedBy = gr.sys_created_by.toString();
			if (commentedBy){
				var userGr = new GlideRecord('sys_user');
				userGr.addQuery('user_name',commentedBy);
				userGr.addQuery('user_name','!=','');
				userGr.addActiveQuery();
				userGr.query();
				userGr.next();
				commenter = userGr.name.toString();
			}
			else{
				commenter = commentedBy;
			}
			commenter = commenter || 'System';
			var createdOn = new GlideDateTime(gr.sys_created_on);
			var schedTools = new ScheduleTools();
			createdOn = new GlideDateTime(schedTools.timeZoneDiff(createdOn,'-6'));

			var createdOnDate = createdOn.getDate();
			var createdOnTime = new GlideTime();
			createdOnTime.setValue(createdOn.getTime());

			var variableName = createdOnDate + ' ' + createdOnTime.getByFormat('hh:mm a') + ' - ' + commenter;
			var variableValue = gr.value.toString();
			if (variableName && variableValue){
				variableString += variableName + '\n' + variableValue + '\n';
			}
			i++;
		}
		return variableString;
	},
	/**SNDOC
	@name setGlobalUrl
	@description Create a URL that should work for viewing all tickets on the portal

	@example
		var notification = new ModularNotificationsBuilder();
		notification.table = current.getTableName();
		notification.documentID = current.sys_id;
		notification.setGlobalUrl();

	@returns {void}
	*/

	setGlobalUrl: function() {
		if (this.table && this.documentID) {
			this.globalURL = '/sp/?id=ticket&table=' + this.table + '&sys_id=' + this.documentID + '&sysparm_view=portal';
			if(this.table == 'sysapproval_approver' || (this.table == 'change_request') && (this.action == 'approved' || this.action == 'rejected')){
				//If it's a non-itil user
				if(this.type == 'sp')
				{
					this.globalURL = '/sp?id=approval&table=sysapproval_approver&sys_id=' + this.documentID;
				}
				//If it's an itil user
				else if(this.type == 'itil'){
					this.globalURL = gs.generateURL(this.table, this.documentID);
				}
				//Everyone else
				else
				{
					this.globalURL = '/sp?id=approval&table=sysapproval_approver&sys_id=' + this.documentID;
				}
			}
		}
	},	
	/**SNDOC
	@name getRitmApprovers
	@description Runs a flow that looks for approvers to appear on a record returns the encoded user query for querying sys_user with.

	@example
		var grRitm = new GlideRecord('sc_req_item');
		grRitm.get('RITM0030262');
		var notification = new ModularNotificationsBuilder();
		notification.getRitmApprovers(grRitm.getUniqueValue());

	@returns {string}
	*/

	getRitmApprovers: function(document_id) {
		try {

			var inputs = {};
			inputs['document_id'] = document_id; // String 

			// Execute Synchronously: Run in foreground. Code snippet has access to outputs.
			var result = sn_fd.FlowAPI.getRunner()
			.subflow('global.look_up_ritm_approvers')
			.inForeground()
			.timeout(600000)
			.withInputs(inputs)
			.run();
			var outputs = result.getOutputs();

			// Get Outputs:
			// Note: outputs can only be retrieved when executing synchronously.
			var has_approvals = outputs['has_approvals']; // True/False
			var approver_user_query = outputs['approver_user_query']; // String

			var userQuery = has_approvals ? approver_user_query : '';
			userQuery ='';
			return userQuery;

		} catch (ex) {
			var message = ex.getMessage();
			gs.error(message);
			return '';
		}

	},	
	///////////////////////////////////////////////////////////////////////////////////
	///////////// Set signature area of email//////////////////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////
	getSignature: function(ritm) {
		var signatureContent = this.signature ? this.signature : '';
		if((ritm.cat_item.u_custom_signature.toString() == 'true' || ritm.cat_item.u_custom_signature.toString() == 'True') && !gs.nil(ritm.cat_item.u_signature.toString())){
			signatureContent = ritm.cat_item.u_signature.toString();
		}
		return signatureContent;
	},	
	///////////////////////////////////////////////////////////////////////////////////
	///////////// Create outlook actionable message survey/////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////
	getSurvey: function(table, documentID) {
		var surveyContent = '';

		var asmtGr = new GlideRecord('asmt_assessment_instance');//Get survey instance
		asmtGr.addQuery('trigger_table',table);
		asmtGr.addQuery('trigger_id',documentID);
		asmtGr.query();
		asmtGr.next();

		var asmtSysId = asmtGr.sys_id.toString();
		var generator = new global.CustomSurveyAdaptiveCardGenerator(asmtSysId);//Instantiate survey generator
		generator.instanceId = asmtSysId;
		var content = generator.generate();//Start generating 
		if(content){
			surveyContent = '<script type="application/adaptivecard+json">' + content + '</script>';
		}

		return surveyContent;
	},	
	///////////////////////////////////////////////////////////////////////////////////////
	//////////////////// Return survey sysid  /////////////////////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////////
	getSurveySysid: function(table, documentID) {

		var asmtGr = new GlideRecord('asmt_assessment_instance');//Get survey instance
		asmtGr.addQuery('trigger_table',table);
		asmtGr.addQuery('trigger_id',documentID);
		asmtGr.query();
		asmtGr.next();
		var asmtSysId = asmtGr.sys_id.toString();

		return asmtSysId;
	},
	///////////////////////////////////////////////////////////////////////////////////////
	//////////////////// Returns true if approver records exist for record ////////////////
	///////////////////////////////////////////////////////////////////////////////////////
	hasApprovers: function() {
		var query = 'sysapproval=';
		query += !gs.nil(current) && !gs.nil(current.sys_id) ? current.sys_id.toString() : this.documentID;
		var approverGr = new GlideRecord('sysapproval_approver');
		approverGr.addEncodedQuery(query);
		approverGr.query();

		if(this.table == 'sc_req_item'){
			var approvalTaskQuery = 'request_item=' + current.sys_id.toString() + '^short_descriptionLIKEapprov^active=true';
			var approvalTaskGr = new GlideRecord('sc_task');
			approvalTaskGr.addEncodedQuery(approvalTaskQuery);
			approvalTaskGr.query();
		}
		var taskQuery = '';

		return approverGr.hasNext() || (this.table == 'sc_req_item' && approvalTaskGr.hasNext());
	},

	///////////////////////////////////////////////////////////////////////////////////
	//Internal - Build HTML for URL header section of email////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////
	buildUrlHtml: function(){
		for(var n = 0; n<this.urls.length; n++){
			this.urlHTML += '<td style=padding:10><a href="' + 
				this.urls[n]['url'] + 
				'"target=_blank class=v-font-size style="padding:5px 15px;display:inline-block;color:#34495e;font-family:arial,helvetica,sans-serif;font-size:14px;text-decoration:none">' + 
				this.urls[n]['label'] + 
				'</a></td>';
		}
	},
	///////////////////////////////////////////////////////////////////////////////////
	//Internal - Build HTML for variables section of email/////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////
	buildVariableInformation: function(varList){
		var variableInformation = '';
		for (var i = 0; i < varList.length; i++) {
			if (varList[i].variableName && varList[i].variableValue) {
				variableInformation += '</td></tr><tr><td><table border=0 cellpadding=0 cellspacing=0 width=100%><tr><td align=center style=padding:0;><table border=0 cellpadding=0 cellspacing=0 style=width:600px><tr style=background-color:#FDFDFD><td align=center style="width:200px;padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent"valign=top width=200><div style=max-width:320px;min-width:200px;display:table-cell;vertical-align:top class="u-col u-col-33p33"><div style=width:100%!important><div style="padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent"><table border=0 cellpadding=0 cellspacing=0 width=100% id=u_content_image_10 role=presentation style=font-family:arial,helvetica,sans-serif><tr><td align=left style=overflow-wrap:break-word;word-break:break-word;padding-top:10px;padding-right:10px;padding-bottom:10px;font-family:arial,helvetica,sans-serif><table border=0 cellpadding=0 cellspacing=0 width=100%><tr><td align=right style=padding-right:0;padding-left:0 class=v-text-align style=color:#' + this.colors.apiBlue + '>&#10148;</td></table></table></div></div></div><td align=center style="width:400px;padding-top:0;padding-left:0;padding-bottom:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:1px solid #CCC"valign=top width=400><div style=max-width:320px;min-width:400px;display:table-cell;vertical-align:top class="u-col u-col-66p67"><div style=width:100%!important><div style="padding:0 20px 0 0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:1px solid #CCC"><table border=0 cellpadding=0 cellspacing=0 width=100% id=u_content_heading_3 role=presentation style=font-family:arial,helvetica,sans-serif><tr><td align=left style="overflow-wrap:break-word;word-break:break-word;padding:10px 10px 0;font-family:arial,helvetica,sans-serif"><h3 class="v-text-align v-font-size"style=margin:0;line-height:140%;text-align:left;word-wrap:break-word;font-weight:400;font-family:Raleway,sans-serif;font-size:18px><strong>' + 
					varList[i].variableName + '</strong></h3></table><table border=0 cellpadding=0 cellspacing=0 width=100% id=u_content_text_3 role=presentation style=font-family:arial,helvetica,sans-serif><tr><td align=left style=overflow-wrap:break-word;word-break:break-word;padding:10px;font-family:arial,helvetica,sans-serif><div style=line-height:140%;text-align:left;word-wrap:break-word class=v-text-align><p style=font-size:14px;line-height:140%>' + 
					varList[i].variableValue + '</div></table></div></div></div></table></table><tr><td>';
			}
		}
		return variableInformation;
	},
	///////////////////////////////////////////////////////////////////////////////////
	//Internal - Build HTML for the main template of email/////////////////////////////
	///////////////////////////////////////////////////////////////////////////////////
	buildHtml: function(){

		/*
			This html variable will build the whole email template
			Modify the variables above to control the sections
			To modify this html section, copy between quotes into a HTML beautifier and edit
			To pull the edited html back in, copy the edited and beautified HTML into a minifier to remove new lines
			*/

		var html = '<!DOCTYPE html><head> ' + 
			this.adaptiveCard + ' <style>table, td{color: #000}a{color: #00e; text-decoration: underline}#u_content_text_7 a{color: #FDFDFD}body{margin: 0; padding: 0}table, td, tr{border-collapse: collapse; padding: 0}p{margin: 0}</style></head><body style=margin:0;padding:0;-webkit-text-size-adjust:100%;color:#000;font-family:arial,helvetica,sans-serif;> <table style="border-collapse:collapse;table-layout:fixed;border-spacing:0;vertical-align:top;min-width:320px;Margin:0 auto;background-color:#d0e8f2;width:100%"> <tr style=vertical-align:top> <td style=word-break:break-word;border-collapse:collapse!important;vertical-align:top> <table style="border-collapse:collapse;border-spacing:0;width:100%"> <tr> <td style=text-align:center> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=padding:0; align=center> <table style=border-collapse:collapse;border-spacing:0;width:600px;background-color:#FDFDFD> <tr style=background-color:#FDFDFD> <td style="width:300px;padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent;background-color:#FDFDFD" align=center valign=top width=300> <div style=max-width:320px;min-width:300px;display:table-cell;vertical-align:top> <div style=width:100%!important> <div style="padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent"> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style="overflow-wrap:break-word;word-break:break-word;padding:10px 10px 10px 20px;" align=left> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=padding-right:0;padding-left:0 align=left class=v-text-align> <a href=https://apigroup.service-now.com/ target=_blank><img alt=Logo class="v-src-max-width v-src-width" src=' + 
			this.images.apiLogo + ' style=text-align:left;outline:0;text-decoration:none;-ms-interpolation-mode:bicubic;clear:both;display:inline-block!important;border:none;height:auto;float:none;width:51%;max-width:65px width=65px title=Logo></a> </td></tr></table> </td></tr></table> </div></div></div><td style="width:300px;padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent;background-color:#FDFDFD" align=center valign=top width=300> <div style=max-width:320px;min-width:300px;display:table-cell;vertical-align:top class="u-col u-col-50"> <div style=width:100%!important> <div style="padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent"> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=overflow-wrap:break-word;word-break:break-word;padding:10px;text-align:left> <div style=text-align:center class=menu> <table style=border-collapse:collapse;border-spacing:0;text-align:center> <tr> ' + 
			this.urlHTML + ' </tr></table> </div></td></tr></table> </div></div></div></td></tr></table> </td></tr></table> <tr> <td> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=padding:0;background-color:transparent align=center> <table style=border-collapse:collapse;border-spacing:0;width:600px> <tr style=background-color: ' + 
			this.colors.apiBlue + '> <td style="width:600px;padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent; background-color: ' + 
			this.colors.apiBlue + '" align=center valign=top width=600> <div style=max-width:320px;min-width:600px;display:table-cell;vertical-align:middle; class="u-col u-col-100"> <div style=width:100%!important> <div style="padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent"> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style="overflow-wrap:break-word;word-break:break-word;text-align:center;color:#FDFDFD; margin:0;color:#FDFDFD;word-wrap:break-word;padding-top:20px;padding-bottom:10px;"> <h2><strong> ' + 
			this.subject + ' </strong> </h2> </table> </div></div></div></td></tr></table> </td></tr></table> <tr> <td> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=padding:0;background-color:transparent align=center> <table style=border-collapse:collapse;border-spacing:0;width:600px> <tr style=background-color:#FDFDFD> <td style="width:600px;padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent" align=center valign=top width=600> <div style=max-width:320px;min-width:600px;display:table-cell;vertical-align:top class="u-col u-col-100"> <div style=width:100%!important> <div style="padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent"><table style=border-collapse:collapse;border-spacing:0;width:100%><tr><td style=overflow-wrap:break-word;word-break:break-word;padding:0;text-align:left><table style=border-collapse:collapse;border-spacing:0;width:600px><tr><td style=padding-right:0;padding-left:0 align=center class=v-text-align></table></table></div></div></div></table></table><tr><td align=center><table style=border-collapse:collapse;border-spacing:0;width:600px><tr><td style=padding:0;background-color:#FDFDFD align=center><table style=border-collapse:collapse;border-spacing:0;width:600px><tr style=background-color:#FDFDFD><td style="width:600px;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent" align=center valign=top width=600> <div style=max-width:320px;min-width:600px;display:table-cell;vertical-align:top> <div style=width:100%!important> <div style="border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent"> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style="overflow-wrap:break-word;word-break:break-word;padding:10px 10px 0;" align=left> <h1 class="v-text-align v-font-size" style=margin:0;line-height:140%;text-align:left;word-wrap:break-word;font-weight:400;font-size:22px> Dear ' + 
			this.name + ' , </h1> </table> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=overflow-wrap:break-word;word-break:break-word;padding:10px;text-align:left> <div style=line-height:140%;text-align:left;word-wrap:break-word class=v-text-align> <p style=font-size:14px;line-height:140%> ' + 
			this.information + ' </p></div></table> </div></div></div></div></div></div></td></tr></table> </td></tr></table> ' + 
			this.variableInformation + ' <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=padding:0;background-color:transparent align=center> <table style=border-collapse:collapse;border-spacing:0;width:600px> <tr style=background-color:#FDFDFD> <td style="width:600px;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent" align=center valign=top width=600> <div style=max-width:320px;min-width:600px;display:table-cell;vertical-align:top class="u-col u-col-100" id=u_column_19> <div style=width:100%!important> <div style="border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent"> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=overflow-wrap:break-word;word-break:break-word;padding:10px;text-align:left> <p style=font-size:14px;line-height:140%> ' + 
			this.moreInformation + ' </p></table> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=overflow-wrap:break-word;word-break:break-word;padding:10px;text-align:left> ' + 
			this.signature + ' </table></div></div></div></td></tr></table></td></tr></table></td></tr></table></td></tr><tr> <td> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=padding:0; align=center> <table style=border-collapse:collapse;border-spacing:0;width:600px> <tr> <td style="width:600px;padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent;background-color: ' + 
			this.colors.apiBlue + '" align=center valign=top width=600> <div style=max-width:320px;min-width:600px;display:table-cell;vertical-align:top;background-color: ' + 
			this.colors.apiBlue + ' class="u-col u-col-100"> <div style=width:100%!important> <div style="padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent"> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style="overflow-wrap:break-word;word-break:break-word;padding:10px 10px 0;text-align:left"> <div style=color:#FDFDFD;line-height:140%;text-align:center;word-wrap:break-word class=v-text-align> <p style=font-size:14px;line-height:140%> <strong> ' + 
			this.provideFeedback + ' </strong> </div></td></tr></table> </div></div></div></td></tr></table> </td></tr></table> </td></tr><tr> <td style=padding:0;background-color: ' + 
			this.colors.apiBlue + ' > <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=padding:0;background-color: ' + 
			this.colors.apiBlue + ' align=center> <table style=border-collapse:collapse;border-spacing:0;width:600px> <tr> <td style="width:400px;padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent;border-radius:0;-webkit-border-radius:0;-moz-border-radius:0;background-color: ' + 
			this.colors.apiBlue + '" align=center valign=bottom width=400> <div style=max-width:320px;min-width:400px;display:table-cell;vertical-align:bottom; class="u-col u-col-66p67"> <div style=width:100%!important;border-radius:0;-webkit-border-radius:0;-moz-border-radius:0> <div style="padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent;border-radius:0;-webkit-border-radius:0;-moz-border-radius:0;"> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style="vertical-align:bottom;overflow-wrap:break-word;word-break:break-word;padding: 0px 0px 10px 10px;text-align:left"> <img src=' + 
			this.images.footerImageLeft + ' height=23> </td></tr></table> </div></div></div><td style=" width:200px;padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent;border-radius:0;-webkit-border-radius:0;-moz-border-radius:0;background-color: ' + 
			this.colors.apiBlue + '" align=center valign=bottom width=200> <div style=max-width:320px;min-width:200px;display:table-cell;vertical-align:bottom; class="u-col u-col-33p33"> <div style=width:100%!important;border-radius:0;-webkit-border-radius:0;-moz-border-radius:0> <div style="padding:0;border-top:0 solid transparent;border-left:0 solid transparent;border-right:0 solid transparent;border-bottom:0 solid transparent;border-radius:0;-webkit-border-radius:0;-moz-border-radius:0"> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=overflow-wrap:break-word;word-break:break-word;padding:10px;text-align:left> <table style=border-collapse:collapse;border-spacing:0;width:100%> <tr> <td style=padding-right:0;padding-left:0; padding-bottom:3px align=right class=v-text-align> <img class="v-src-max-width v-src-width" src=' + 
			this.images.footerImageRight + ' style=text-align:right;outline:0;text-decoration:none;-ms-interpolation-mode:bicubic;clear:both;display:inline-block!important;border:none;height:auto;float:none;width:30%;max-width:54px width=54> </td></tr></table> </td></tr></table> </div></div></div></td></tr></table> </div></div></div></td></tr></table> </td></tr></table></td></tr></table></td></tr></table></body>';
		return html;
	},
	type: 'ModularNotificationsBuilder'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>Terry.Lillo</sys_created_by>
        <sys_created_on>2021-10-18 14:56:24</sys_created_on>
        <sys_id>8f6f38191b13f85062e50ed2cd4bcb57</sys_id>
        <sys_name>ModularNotificationsBuilder</sys_name>
        <sys_package display_value="Modular Notifications" source="9433631b1bcf30508c5143f3cc4bcbfc">9433631b1bcf30508c5143f3cc4bcbfc</sys_package>
        <sys_policy/>
        <sys_scope display_value="Modular Notifications">9433631b1bcf30508c5143f3cc4bcbfc</sys_scope>
        <sys_update_name>sys_script_include_8f6f38191b13f85062e50ed2cd4bcb57</sys_update_name>
    </sys_script_include>
</record_update>
