<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl">
    <sys_security_acl action="INSERT_OR_UPDATE">
        <active>true</active>
        <admin_overrides>true</admin_overrides>
        <advanced>true</advanced>
        <condition/>
        <description>Allow read for records in sc_req_item, for users with role snc_internal, and if the ACL script returns true.</description>
        <local_or_existing>Local</local_or_existing>
        <name>sc_req_item</name>
        <operation display_value="read">read</operation>
        <script><![CDATA[//ACL for read access to RITM
//This script uses a decision table to determine if the user has read access to the RITM

if (!gs.getUser().hasRole('itil')) {
    var catItemSysId = current.cat_item.sys_id.toString();
    var ritmSysId = current.sys_id.toString();
    //Use decision table API to get the records
    var decisionId = "2e3cb88c1b34f5108c5143f3cc4bcbb7"; //"RITM Access ACL Helper" table
    var dt = new sn_dt.DecisionTableAPI();
    var input = {
        u_item: catItemSysId
    };
    //gs.info(catItemSysId);

    var decisions = dt.getDecisions(decisionId, input);

    if (decisions.length > 0) {
        for (var i = 0; i < decisions.length; i++) {
            var decision = decisions[i];
            var thisVariable = decision.result_elements.u_variable.name;
            if (!gs.nil(current.variables[thisVariable]) &&
                current.variables[thisVariable].sys_id.toString() == gs.getUser().getID()) {
                answer = true;
                break;
            } else answer = false;
        }
    }

    //also give it to anyone on the watch list, and the managers of the opened by and requested for
		//(current.requested_for.manager == gs.getUserID() || current.opened_by.manager == gs.getUserID() ||
	/*
	if (current.request.watch_list.toString().indexOf(gs.getUserID()) != -1) {
        answer = true;
    }*/

}]]></script>
        <security_attribute/>
        <sys_class_name>sys_security_acl</sys_class_name>
        <sys_created_by>Terry.Lillo</sys_created_by>
        <sys_created_on>2023-08-16 20:35:37</sys_created_on>
        <sys_id>877001041b74f5108c5143f3cc4bcb0e</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>sc_req_item</sys_name>
        <sys_package display_value="Modular Notifications" source="9433631b1bcf30508c5143f3cc4bcbfc">9433631b1bcf30508c5143f3cc4bcbfc</sys_package>
        <sys_policy/>
        <sys_scope display_value="Modular Notifications">9433631b1bcf30508c5143f3cc4bcbfc</sys_scope>
        <sys_update_name>sys_security_acl_877001041b74f5108c5143f3cc4bcb0e</sys_update_name>
        <sys_updated_by>John.Schwab</sys_updated_by>
        <sys_updated_on>2023-10-05 16:53:04</sys_updated_on>
        <type display_value="record">record</type>
    </sys_security_acl>
</record_update>
